class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> quadruplets;
        if(nums.size()<4)
            return quadruplets;
        sort(nums.begin(), nums.end());
        for(int i=0;i<nums.size()-3;i++)
        {
            for(int j= i+1;j<nums.size();j++)
            {
                int tar=target-nums[i]-nums[j];
                int front=j+1,back=nums.size()-1;
                while(front<back)
                {
                    int sum=nums[front]+nums[back];
                    if(sum<tar)
                    {
                        front++;
                    }
                    else if(tar<sum)
                    {
                        back--;
                    }
                    else
                    {
                        vector<int> druplets(4,0);
                        druplets[0]=nums[i];
                        druplets[1]=nums[j];
                        druplets[2]=nums[front];
                        druplets[3]=nums[back];
                        
                        quadruplets.push_back(druplets);
                        while(front<back&&nums[front]==druplets[2])
                            front++;
                        while(front<back&&nums[back]==druplets[3])
                            back--;
                    }
                }
                while(j+1<nums.size()-2&&nums[j]==nums[j+1])
                    j++;              
            }
            while(i+1<nums.size()-3&&nums[i]==nums[i+1])
                i++;
        }
        return quadruplets;
    }
};
