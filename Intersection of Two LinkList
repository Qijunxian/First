/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int a=getLength(headA), b=getLength(headB);
        ListNode *A=headA, *B=headB;
        if(a>b)
        {
            for(int i=0;i<a-b;i++)
            {
                A=A->next;
            }
        }
        else
        {
            for(int i=0;i<b-a;i++)
            {
                B=B->next;
            }
        }
        while(A&&B)
        {
            if(A==B)
                return A;
            else
            {
                A=A->next;
                B=B->next;
            }
        }
        return NULL;
    }
    
    int getLength(ListNode* node)
    {
        int n=0;
        while(node)
        {
            n++;
            node=node->next;
        }
        return n;
    }
};
