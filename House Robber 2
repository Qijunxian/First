class Solution {
public:
    int rob(vector<int>& nums) {
        if(nums.empty())
            return 0;
        if(nums.size()==1)
            return nums[0];
        return max(robber(nums, 0, nums.size()-1), robber(nums, 1, nums.size()));
    }
    
    int robber(vector<int>& nums, int l, int r)
    {
        if(r-l<=1)
            return nums[l];
        vector<int> dp(r, 0);
        dp[l]=nums[l];
        dp[l+1]=max(nums[l], nums[l+1]);
        for(int i=l+2;i<r;i++)
        {
            dp[i]=max(dp[i-1], dp[i-2]+nums[i]);
        }
        cout<<dp.size()<<endl;
        return dp.back();
        
    }
};
